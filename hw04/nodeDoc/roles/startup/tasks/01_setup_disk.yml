
    #FAKTS
    - name: Include vars of stuff.yaml into the 'stuff' variable (2.2).
      include_vars:
        file: ../../../../boxes_config.yml
      register: vars
    - debug: var=vars['global']['provider']

    #if vbox
    - name: FOR VBOX check if /dev/sdc1 exists 
      parted: device=/dev/sdc
      register: sdc_info
      when: vars['global']['provider']=="vbox"
    
    - name: FOR VBOX Check if drives are already mounted
      shell: df | grep "/dev/sdc1" | wc -l
      register: mounted_drives
      when: vars['global']['provider']=='vbox'
  
    - name: FOR VBOX create partition if not exists
      parted: 
        device: /dev/sdc
        number: 1
        state: present
      when: (sdc_info.partitions[0] is not defined) and (mounted_drives.stdout=="0") and (vars['global']['provider']=='vbox')

    - name: FOR VBOX create filesystem on /dev/sdc1
      filesystem:
        fstype: ext3 
        dev: /dev/sdc1
        force: yes
      when: (sdc_info.partitions[0] is not defined) and (mounted_drives.stdout=="0") and (vars['global']['provider']=='vbox')

    - name: FOR VBOX Create a directory if it does not exist
      file:
        path: /var/lib/docker
        state: directory
        mode: '0755'
        recurse: yes
      when: (sdc_info.partitions[0] is not defined) and (mounted_drives.stdout=="0") and (vars['global']['provider']=='vbox')
        
    - name: FOR VBOX Remove everything from /var/lib/docker    
      file:
        state: absent
        path: /var/lib/docker/*
      when: vars['global']['provider']=='vbox'
    
    - name: FOR VBOX mount docker container storage as separate fs 
      mount:
        path: /var/lib/docker
        src: /dev/sdc1
        fstype: ext3
        state: mounted
      when: vars['global']['provider']=='vbox'


    #if vmware FOR VMWARE
    - name: FOR VMWARE check if /dev/sdb exists
      parted: device=/dev/sdb
      register: sdb_info
      when: vars['global']['provider']=='vmware'
    
    - name: FOR VMWARE Check if drives are already mounted
      shell: df | grep "/dev/sdb1" | wc -l
      register: mounted_drives
      when: vars['global']['provider']=='vmware'

    - name: FOR VMWARE create partition if not exists
      parted: 
        device: /dev/sdb
        number: 1
        state: present
      when: (vars['global']['provider']=='vmware') and (sdb_info.partitions[0] is not defined) and (mounted_drives.stdout=="0")

    - name: FOR VMWARE create filesystem on /dev/sdb1
      filesystem:
        fstype: ext3 
        dev: /dev/sdb1
        force: yes
      when: (vars['global']['provider']=='vmware') and (sdc_info.partitions[0] is not defined) and (mounted_drives.stdout=="0")

    - name: FOR VMWARE Create a directory if it does not exist
      file:
        path: /var/lib/docker
        state: directory
        mode: '0755'
        recurse: yes
      when: (vars['global']['provider']=='vmware') and (sdc_info.partitions[0] is not defined) and (mounted_drives.stdout=="0")
        
    
    - name: FOR VMWARE Remove everything from /var/lib/docker    
      file:
        state: absent
        path: /var/lib/docker/*
      when: vars['global']['provider']=='vmware'
    
    - name: FOR VMWARE mount docker container storage as separate fs 
      mount:
        path: /var/lib/docker
        src: /dev/sdb1
        fstype: ext3
        state: mounted      
      when: vars['global']['provider']=='vmware'

